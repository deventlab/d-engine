syntax = "proto3";
package raft.client;

import "proto/error.proto";

message ClientCommand {
oneof command {
    bytes get = 1;            // Key for GET
    Insert insert = 2;        // Key+Value for INSERT
    bytes delete = 3;         // Key for DELETE
    bool no_op = 4;           // Simple flag for NO_OP
}

message Insert {
    bytes key = 1;
    bytes value = 2;
}
}

message ClientProposeRequest {
    uint32 client_id = 1;
    repeated ClientCommand commands = 2;
}

message ClientReadRequest {
    uint32 client_id = 1;
    bool linear = 2;
    repeated ClientCommand commands = 3;
}

message ClientResponse {
    error.ErrorCode error = 1;

    oneof success_result {
        bool write_ack = 2;
        ReadResults read_data = 3;
    }

    error.ErrorMetadata metadata = 4;
}

message ClientResult {  // Renamed from ClientGetResult
    bytes key = 1;
    bytes value = 2;
  }

message ReadResults {
    repeated ClientResult results = 1;
}
  

service RaftClientService {
  rpc HandleClientPropose (ClientProposeRequest) returns (ClientResponse);
  rpc HandleClientRead (ClientReadRequest) returns (ClientResponse);
}