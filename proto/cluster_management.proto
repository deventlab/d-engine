syntax = "proto3";
package raft.cluster;

message ClusterMembershipChangeRequest {
    // the request sender id, (might be fake leader or real leader)
    uint32 id = 1;
    // leader term
    uint64 term = 2;
    // so follower can redirect clients
    // when receiver receives the configure, they need compare the version
    // value is timestamp by default.
    uint64 version = 3;
  
    ClusterMembership cluster_membership = 4;
  }
  
  message ClusterConfUpdateResponse {
    // record down the response owner id
    uint32 id = 1;
    uint64 term = 2;
    uint64 version = 3;
    bool success = 4;
  }

  message MetadataRequest {
}

message ClusterMembership {
    repeated NodeMeta nodes = 1;
}

message NodeMeta {
    uint32 id = 1;
    string ip = 2;
    uint32 port = 3;
    int32 role = 4;
}

service ClusterManagementService {
  rpc UpdateClusterConf (ClusterMembershipChangeRequest) returns (ClusterConfUpdateResponse);
  rpc GetClusterMetadata (MetadataRequest) returns (ClusterMembership);
}